cmake_minimum_required(VERSION 3.11)
project(rtiexamples-real-time-wan-transport)
set(CMAKE_MODULE_PATH
    ${CMAKE_MODULE_PATH}
    "${CMAKE_CURRENT_SOURCE_DIR}/../../../../resources/cmake"
)

# Find the RTI Connext DDS libraries
if(NOT RTIConnextDDS_FOUND)
    find_package(RTIConnextDDS
        "6.1.0"
        REQUIRED
        COMPONENTS
            core
    )
endif()

include(ConnextDdsCodegen)

find_package( INIReader REQUIRED )

set(IDL "real_time_wan_transport")

# First, we call Codegen to generate the header and source files from the
# IDL
if(_CONNEXT_CODEGEN_ARGS)
    set(codegen_args CODEGEN_ARGS ${_CONNEXT_CODEGEN_ARGS})
else()
    set(codegen_args)
endif()
if(IDL)
    set(prefix "${IDL}")
else()
    # If no prefix was given, the name of the example folder name is used
    # as prefix
    get_filename_component(
        folder_name
        "${CMAKE_CURRENT_SOURCE_DIR}"
        DIRECTORY)
    get_filename_component(
        folder_name
        "${folder_name}"
        NAME)
    set(prefix "${folder_name}")
 endif()

# Get the list of the source files to generate and configure the command
# to cal Codegen
connextdds_rtiddsgen_run(
    IDL_FILE
        "${CMAKE_CURRENT_SOURCE_DIR}/${IDL}.idl"
    OUTPUT_DIRECTORY
        "${CMAKE_CURRENT_BINARY_DIR}/src"
    LANG
        "C++"
    ${_CONNEXT_CODEGEN_ARGS}
)

# Get the path to the generated publisher and subscriber source code
connextdds_sanitize_language(LANG "C++" VAR lang_var)
set(${IDL}_${lang_var}_PUBLISHER_SOURCE
    "${${IDL}_${lang_var}_PUBLISHER_SOURCE}"
)
set(${IDL}_${lang_var}_SUBSCRIBER_SOURCE
    "${${IDL}_${lang_var}_SUBSCRIBER_SOURCE}"
)

# This will help to ensure that all the files generated by codegen are
# created
add_custom_target(${IDL}_${lang_var}_sources
    DEPENDS
    ${${IDL}_${lang_var}_GENERATED_SOURCES}
)

set(obj_library ${IDL}_${lang_var}_obj)
add_library(${obj_library}
    OBJECT
    ${${IDL}_${lang_var}_SOURCES}
)

target_compile_definitions(
    ${obj_library}
    PRIVATE
    $<TARGET_PROPERTY:RTIConnextDDS::cpp_api,INTERFACE_COMPILE_DEFINITIONS>)

target_include_directories(
    ${obj_library}
    PRIVATE
    $<TARGET_PROPERTY:RTIConnextDDS::cpp_api,INTERFACE_INCLUDE_DIRECTORIES>)

set_target_properties(
    ${obj_library}
    PROPERTIES
        90
        98
)

add_dependencies(${obj_library}
    ${IDL}_${lang_var}_sources
)

add_executable(real_time_wan_transport_publisher
	$<TARGET_OBJECTS:${prefix}_${lang_var}_obj>
	real_time_wan_transport_publisher.cxx
	/inih/lib/INIReader.cpp)
add_executable(real_time_wan_transport_subscriber
	$<TARGET_OBJECTS:${prefix}_${lang_var}_obj>
	real_time_wan_transport_subscriber.cxx)

# Link all the dependencies and the RTI libraries for the API language
target_link_libraries(real_time_wan_transport_publisher
    PUBLIC
	${INIREADER_LIBRARIES}
    PRIVATE
        ${_CONNEXT_DEPENDENCIES}
        RTIConnextDDS::cpp_api
)
target_link_libraries(real_time_wan_transport_subscriber
    PRIVATE
        ${_CONNEXT_DEPENDENCIES}
        RTIConnextDDS::cpp_api
)

# Add the include directories
target_include_directories(real_time_wan_transport_publisher
    PRIVATE
        "${CMAKE_CURRENT_BINARY_DIR}/src"
	${INIREADER_INCLUDES}
)
target_include_directories(real_time_wan_transport_subscriber
    PRIVATE
        "${CMAKE_CURRENT_BINARY_DIR}/src"
)

# Set output name for the binary
set_target_properties(real_time_wan_transport_publisher
    PROPERTIES
        OUTPUT_NAME "${_CONNEXT_OUTPUT_NAME}"
        90
        98
)
set_target_properties(real_time_wan_transport_subscriber
    PROPERTIES
        OUTPUT_NAME "${_CONNEXT_OUTPUT_NAME}"
        90
        98
)
